 #1.Test the difference of means of the following simulated genes using the randomization, t-test(), and wilcox.test() functions. Plot the distributions using histograms and boxplots. [Difficulty: Intermediate/Advanced]
> set.seed(101)
> gene1=rnorm(30,mean=4,sd=3)
> gene2=rnorm(30,mean=3,sd=3)
> org.diff=mean(gene1)-mean(gene2)
> gene.df=data.frame(exp=c(gene1,gene2),
+                    group=c( rep("test",30),rep("control",30) ) )
> t.test(gene1, gene2)

	Welch Two Sample t-test

data:  gene1 and gene2
t = 1.6188, df = 55.719, p-value = 0.1111
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.2787179  2.6248604
sample estimates:
mean of x mean of y 
 3.751368  2.578297 

> wilcox.test(gene1, gene2)

	Wilcoxon rank sum exact test

data:  gene1 and gene2
W = 530, p-value = 0.2418
alternative hypothesis: true location shift is not equal to 0

> 
> 
> exp.null <- do(1000) * diff(mosaic::mean(exp ~ shuffle(group), data=gene.df))
> sum(exp.null>org.diff)/1000
[1] 0.039
> 
> hist(exp.null[,1],xlab="null distribution | no difference in samples",
+      main=expression(paste(H[0]," :no difference in means") ),
+      xlim=c(-2,2),col="maroon",border="white")
> abline(v=quantile(exp.null[,1],0.95),col="red" )
> abline(v=org.diff,col="blue" )
> text(x=quantile(exp.null[,1],0.95),y=200,"0.05",adj=c(1,0),col="red")
> text(x=org.diff,y=100,"org. diff.",adj=c(1,0),col="blue")
> 
> boxplot(exp.null, main = "box-plot of means")
> 
> 
> #2.Test the difference of the means of the following simulated genes using the randomization, t-test() and wilcox.test() functions. Plot the distributions using histograms and boxplots. [Difficulty: Intermediate/Advanced]
> set.seed(100)
> gene1=rnorm(30,mean=4,sd=2)
> gene2=rnorm(30,mean=2,sd=2)
> 
> org.diff=mean(gene1)-mean(gene2)
> gene.df=data.frame(exp=c(gene1,gene2),
+                    group=c( rep("test",30),rep("control",30) ) )
> t.test(gene1, gene2)

	Welch Two Sample t-test

data:  gene1 and gene2
t = 3.7653, df = 47.552, p-value = 0.0004575
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 0.872397 2.872761
sample estimates:
mean of x mean of y 
 4.057728  2.185149 

> wilcox.test(gene1, gene2)

	Wilcoxon rank sum exact test

data:  gene1 and gene2
W = 658, p-value = 0.001795
alternative hypothesis: true location shift is not equal to 0

> 
> 
> exp.null <- do(1000) * diff(mosaic::mean(exp ~ shuffle(group), data=gene.df))
> sum(exp.null>org.diff)/1000
[1] 0.001
> 
> hist(exp.null[,1],xlab="null distribution | no difference in samples",
+      main=expression(paste(H[0]," :no difference in means") ),
+      xlim=c(-2,2),col="purple",border="white")
> abline(v=quantile(exp.null[,1],0.95),col="red" )
> abline(v=org.diff,col="blue" )
> text(x=quantile(exp.null[,1],0.95),y=200,"0.05",adj=c(1,0),col="red")
> text(x=org.diff,y=100,"org. diff.",adj=c(1,0),col="blue")
> 
> boxplot(exp.null, main = "box-plot of means")
> 
> 
> #3.We need an extra data set for this exercise. Read the gene expression data set as follows: gexpFile=system.file("extdata","geneExpMat.rds",package="compGenomRData") data=readRDS(gexpFile). The data has 100 differentially expressed genes. The first 3 columns are the test samples, and the last 3 are the control samples. Do a t-test for each gene (each row is a gene), and record the p-values. Then, do a moderated t-test, as shown in section “Moderated t-tests” in this chapter, and record the p-values. Make a p-value histogram and compare two approaches in terms of the number of significant tests with the
> 
> # 0.05 threshold. On the p-values use FDR (BH), Bonferroni and q-value adjustment methods. Calculate how many adjusted p-values are below 0.05 for each approach. [Difficulty: Intermediate/Advanced]
> 
> gexpFile=system.file("extdata","geneExpMat.rds",package="compGenomRData")
> 
> data=readRDS(gexpFile)
> 
> group1=1:3
> group2=4:6
> n1=3
> n2=3
> dx=rowMeans(data[,group1])-rowMeans(data[,group2])
> 
> require(matrixStats)
> 
> # get the esimate of pooled variance 
> stderr = sqrt( (rowVars(data[,group1])*(n1-1) + 
+                   rowVars(data[,group2])*(n2-1)) / (n1+n2-2) * ( 1/n1 + 1/n2 ))
> 
> # do the shrinking towards median
> mod.stderr = (stderr + median(stderr)) / 2 # moderation in variation
> 
> # esimate t statistic with moderated variance
> t.mod <- dx / mod.stderr
> 
> # calculate P-value of rejecting null 
> p.mod = 2*pt( -abs(t.mod), n1+n2-2 )
> 
> # esimate t statistic without moderated variance
> t = dx / stderr
> 
> # calculate P-value of rejecting null 
> p = 2*pt( -abs(t), n1+n2-2 )
> 
> par(mfrow=c(1,2))
> hist(p,col="hotpink",border="white",main="",xlab="P-values t-test")
> mtext(paste("significant tests:",sum(p<0.05))  )
> hist(p.mod,col="lawngreen",border="white",main="",
+      xlab="P-values mod. t-test")
> mtext(paste("significant tests:",sum(p.mod<0.05))  )
> 
